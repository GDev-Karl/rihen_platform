"""initial migration

Revision ID: b04fed6c7fff
Revises: 
Create Date: 2025-01-10 23:49:43.681296

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'b04fed6c7fff'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('course_description',
    sa.Column('course_description_id', sa.Integer(), nullable=False),
    sa.Column('skills', sa.String(), nullable=True),
    sa.Column('weight', sa.Integer(), nullable=True),
    sa.Column('concepts', sa.String(), nullable=True),
    sa.Column('requirements', sa.Text(), nullable=True),
    sa.Column('learning_objectives', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('course_description_id')
    )
    op.create_table('curriculum',
    sa.Column('curriculum_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('curriculum_id')
    )
    op.create_table('user',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('role', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('registration_date', sa.Date(), nullable=True),
    sa.PrimaryKeyConstraint('user_id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('curriculum_average',
    sa.Column('average_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('curriculum_id', sa.Integer(), nullable=False),
    sa.Column('average', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['curriculum_id'], ['curriculum.curriculum_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('average_id')
    )
    op.create_table('general_statistics',
    sa.Column('general_stat_id', sa.Integer(), nullable=False),
    sa.Column('curriculum_id', sa.Integer(), nullable=False),
    sa.Column('average_score', sa.Float(), nullable=True),
    sa.Column('total_learning_hours', sa.Float(), nullable=True),
    sa.Column('total_students', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['curriculum_id'], ['curriculum.curriculum_id'], ),
    sa.PrimaryKeyConstraint('general_stat_id')
    )
    op.create_table('module',
    sa.Column('module_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('curriculum_id', sa.Integer(), nullable=False),
    sa.Column('prerequisite_module_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['curriculum_id'], ['curriculum.curriculum_id'], ),
    sa.ForeignKeyConstraint(['prerequisite_module_id'], ['module.module_id'], ),
    sa.PrimaryKeyConstraint('module_id')
    )
    op.create_table('project',
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('module_id', sa.Integer(), nullable=False),
    sa.Column('deadline', sa.Date(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['module_id'], ['curriculum.curriculum_id'], ),
    sa.PrimaryKeyConstraint('project_id')
    )
    op.create_table('ranking',
    sa.Column('ranking_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('curriculum_id', sa.Integer(), nullable=False),
    sa.Column('rank', sa.Integer(), nullable=True),
    sa.Column('average', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['curriculum_id'], ['curriculum.curriculum_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('ranking_id')
    )
    op.create_table('user_curriculum',
    sa.Column('user_curriculum_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('curriculum_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['curriculum_id'], ['curriculum.curriculum_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('user_curriculum_id')
    )
    op.create_table('user_statistics',
    sa.Column('stat_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('curriculum_id', sa.Integer(), nullable=False),
    sa.Column('total_learning_time', sa.Integer(), nullable=True),
    sa.Column('last_access', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['curriculum_id'], ['curriculum.curriculum_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('stat_id')
    )
    op.create_table('course',
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.Integer(), nullable=False),
    sa.Column('module_id', sa.Integer(), nullable=False),
    sa.Column('duration', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['description'], ['course_description.course_description_id'], ),
    sa.ForeignKeyConstraint(['module_id'], ['module.module_id'], ),
    sa.PrimaryKeyConstraint('course_id')
    )
    op.create_table('evaluation',
    sa.Column('evaluation_id', sa.Integer(), nullable=False),
    sa.Column('module_id', sa.Integer(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('score', sa.Float(), nullable=True),
    sa.Column('assessment_date', sa.Date(), nullable=False),
    sa.ForeignKeyConstraint(['module_id'], ['module.module_id'], ),
    sa.PrimaryKeyConstraint('evaluation_id')
    )
    op.create_table('progress',
    sa.Column('progress_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('module_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('learning_time', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['module_id'], ['module.module_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.user_id'], ),
    sa.PrimaryKeyConstraint('progress_id')
    )
    op.create_table('task',
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('score', sa.Float(), nullable=True),
    sa.Column('file', sa.String(), nullable=True),
    sa.Column('repo', sa.String(), nullable=True),
    sa.Column('directory', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['course.course_id'], ),
    sa.PrimaryKeyConstraint('task_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('task')
    op.drop_table('progress')
    op.drop_table('evaluation')
    op.drop_table('course')
    op.drop_table('user_statistics')
    op.drop_table('user_curriculum')
    op.drop_table('ranking')
    op.drop_table('project')
    op.drop_table('module')
    op.drop_table('general_statistics')
    op.drop_table('curriculum_average')
    op.drop_table('user')
    op.drop_table('curriculum')
    op.drop_table('course_description')
    # ### end Alembic commands ###
